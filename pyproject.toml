[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "map"
version = "0.0.1"
description = "A nice python project"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Shaw Hu" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.8",
]
dependencies = [
    "pytest>=8.0",
    "pytest-cov>=5.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.5.0",
]

[project.urls]
Documentation = "https://github.com/hufengxiao/map#readme"
Issues = "https://github.com/hufengxiao/map/issues"
Source = "https://github.com/hufengxiao/map"

[tool.hatch.build.targets.wheel]
packages = ["src/map"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra", # show all captured stdout/stderr
    "-q", # quiet
    "--cov=map", # report coverage of map
    "--cov-report=term-missing", # show missing coverage
    "--cov-report=html", # generate html coverage report
    "--cov-report=lcov", # generate lcov coverage report
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

[tool.coverage.run]
source_pkgs = ["map", "tests"]
branch = true
parallel = true
omit = [
    "*/.venv/*"
]

[tool.coverage.paths]
map = ["src/map", "*/map/src/map"]
tests = ["tests", "*/map/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true  # Show missing lines in the report
precision = 2  # Number of decimal places to use when rounding

[tool.uv.pip]
index-url = "https://mirrors.cernet.edu.cn/pypi/web/simple"
